services:
  flask1:
    build:
      context: .
      dockerfile: ./compose/production/flask/app1/Dockerfile
    image: xdel_api_production_1
    container_name: xdel_api_production_1
    env_file:
      - ./.envs/.production/.flask.env
      - ./.envs/.production/.postgres.env
    ports:
      - "8080:5000"
    command: /start
  flask2:
    build:
      context: .
      dockerfile: ./compose/production/flask/app2/Dockerfile
    image: xdel_api_production_2
    container_name: xdel_api_production_2
    env_file:
      - ./.envs/.production/.flask.env
      - ./.envs/.production/.postgres.env
    ports:
      - "8081:5000"
    command: /start
  flask3:
    build:
      context: .
      dockerfile: ./compose/production/flask/app3/Dockerfile
    image: xdel_api_production_3
    container_name: xdel_api_production_3
    env_file:
      - ./.envs/.production/.flask.env
      - ./.envs/.production/.postgres.env
    ports:
      - "8082:5000"
    command: /start
  flask4:
    build:
      context: .
      dockerfile: ./compose/production/flask/app4/Dockerfile
    image: xdel_api_production_4
    container_name: xdel_api_production_4
    env_file:
      - ./.envs/.production/.flask.env
      - ./.envs/.production/.postgres.env
    ports:
      - "8083:5000"
    command: /start